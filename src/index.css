
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Moonlight Tales Design System */

@layer base {
  :root {
    --background: 220 25% 10%;
    --foreground: 220 10% 95%;

    --card: 220 20% 15%;
    --card-foreground: 220 10% 95%;

    --popover: 220 20% 15%;
    --popover-foreground: 220 10% 95%;

    --primary: 260 100% 85%;
    --primary-foreground: 260 30% 15%;

    --secondary: 210 40% 20%;
    --secondary-foreground: 210 10% 90%;

    --muted: 220 15% 25%;
    --muted-foreground: 220 10% 70%;

    --accent: 50 100% 70%;
    --accent-foreground: 50 30% 15%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 20% 25%;
    --input: 220 20% 20%;
    --ring: 260 100% 80%;

    --radius: 0.75rem;

    --sidebar-background: 220 25% 12%;
    --sidebar-foreground: 220 10% 85%;
    --sidebar-primary: 260 100% 80%;
    --sidebar-primary-foreground: 260 30% 15%;
    --sidebar-accent: 220 20% 18%;
    --sidebar-accent-foreground: 220 10% 85%;
    --sidebar-border: 220 20% 20%;
    --sidebar-ring: 260 100% 75%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-fredoka;
    background: linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #4c1d95 100%);
    min-height: 100vh;
  }

  /* Custom scrollbar for story content */
  .story-scroll::-webkit-scrollbar {
    width: 8px;
  }

  .story-scroll::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
  }

  .story-scroll::-webkit-scrollbar-thumb {
    background: rgba(160, 120, 255, 0.6);
    border-radius: 4px;
  }

  .story-scroll::-webkit-scrollbar-thumb:hover {
    background: rgba(160, 120, 255, 0.8);
  }
}

/* Floating background elements */
@layer components {
  .floating-element {
    position: absolute;
    pointer-events: none;
    opacity: 0.6;
  }

  .star {
    width: 4px;
    height: 4px;
    background: #fbbf24;
    border-radius: 50%;
    box-shadow: 0 0 10px #fbbf24;
  }

  .cloud {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50px;
    position: relative;
  }

  .cloud::before,
  .cloud::after {
    content: '';
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50px;
  }

  .story-card {
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.15) 0%, 
      rgba(255, 255, 255, 0.05) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .magic-button {
    background: linear-gradient(135deg, #a855f7 0%, #3b82f6 50%, #06b6d4 100%);
    position: relative;
    overflow: hidden;
  }

  .magic-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s;
  }

  .magic-button:hover::before {
    left: 100%;
  }
}
</lov-css>

Let's create the floating background elements component:

<lov-write file_path="src/components/FloatingElements.tsx">
import React from 'react';

const FloatingElements = () => {
  const stars = Array.from({ length: 50 }, (_, i) => ({
    id: i,
    left: Math.random() * 100,
    top: Math.random() * 100,
    delay: Math.random() * 4,
    duration: 2 + Math.random() * 2,
  }));

  const clouds = Array.from({ length: 8 }, (_, i) => ({
    id: i,
    left: Math.random() * 100,
    top: Math.random() * 100,
    width: 60 + Math.random() * 100,
    height: 30 + Math.random() * 40,
    delay: Math.random() * 6,
    duration: 8 + Math.random() * 4,
  }));

  return (
    <div className="fixed inset-0 pointer-events-none overflow-hidden">
      {/* Stars */}
      {stars.map((star) => (
        <div
          key={`star-${star.id}`}
          className="star floating-element animate-twinkle"
          style={{
            left: `${star.left}%`,
            top: `${star.top}%`,
            animationDelay: `${star.delay}s`,
            animationDuration: `${star.duration}s`,
          }}
        />
      ))}

      {/* Clouds */}
      {clouds.map((cloud) => (
        <div
          key={`cloud-${cloud.id}`}
          className="cloud floating-element animate-float"
          style={{
            left: `${cloud.left}%`,
            top: `${cloud.top}%`,
            width: `${cloud.width}px`,
            height: `${cloud.height}px`,
            animationDelay: `${cloud.delay}s`,
            animationDuration: `${cloud.duration}s`,
          }}
        />
      ))}

      {/* Moon */}
      <div className="fixed top-8 right-8 w-16 h-16 bg-gradient-to-br from-yellow-200 to-yellow-400 rounded-full animate-glow opacity-80" />
    </div>
  );
};

export default FloatingElements;
